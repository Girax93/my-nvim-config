{
  "manifest": {
    "name": "@swc/jest",
    "version": "0.2.24",
    "description": "swc integration for jest",
    "main": "index.js",
    "homepage": "https://github.com/swc-project/jest",
    "scripts": {
      "build": "npm run lint && tsc",
      "test": "npm test --workspaces",
      "prepublishOnly": "npm run build",
      "lint": "eslint . --ext .ts && echo 'No lint errors found!'"
    },
    "keywords": [],
    "author": {
      "name": "강동윤",
      "email": "kdy1997.dev@gmail.com"
    },
    "license": "MIT",
    "publishConfig": {
      "registry": "https://registry.npmjs.org/",
      "access": "public"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/swc-project/jest.git"
    },
    "peerDependencies": {
      "@swc/core": "*"
    },
    "dependencies": {
      "@jest/create-cache-key-function": "^27.4.2",
      "jsonc-parser": "^3.2.0"
    },
    "devDependencies": {
      "@jest/transform": "^27.5.1",
      "@swc/core": "^1.2.177",
      "@types/node": "^16.11.12",
      "@typescript-eslint/eslint-plugin": "^5.6.0",
      "@typescript-eslint/parser": "^5.6.0",
      "eslint": "^8.4.1",
      "jest": "^27.4.4",
      "typescript": "^4.5.3"
    },
    "engines": {
      "npm": ">= 7.0.0"
    },
    "files": [
      "index.js"
    ],
    "workspaces": [
      "examples/react"
    ],
    "_registry": "npm",
    "_loc": "/home/agrawe/.cache/yarn/v6/npm-@swc-jest-0.2.24-35d9377ede049613cd5fdd6c24af2b8dcf622875-integrity/node_modules/@swc/jest/package.json",
    "readmeFilename": "README.md",
    "readme": "# @swc/jest\n\n[SWC][] binding for Jest.\n\n## Installation\n\n```sh\n# if you use npm\nnpm i -D jest @swc/core @swc/jest\n# if you use yarn\nyarn add -D jest @swc/core @swc/jest\n```\n\n## Usage\n\n`jest.config.js`:\n\n```js\nmodule.exports = {\n  transform: {\n    '^.+\\\\.(t|j)sx?$': '@swc/jest',\n  },\n}\n```\n\nIt will load the SWC configuration from `.swcrc` by default. You also can customize it:\n\n```js\nconst fs = require('fs')\n\nconst config = JSON.parse(fs.readFileSync(`${__dirname}/.swcrc`, 'utf-8'))\n\nmodule.exports = {\n  transform: {\n    '^.+\\\\.(t|j)sx?$': ['@swc/jest', { ...config, /* custom configuration in Jest */ }],\n  },\n}\n```\n\n## Q & A\n\n### Q: Jest uses CommonJS by default. But I want to use ESM.\n\nA: Setup Jest following this [Guide](https://jestjs.io/docs/ecmascript-modules).\n\n  For JavaScript, edit `package.json` as follows:\n  \n  ```json\n  {\n    // ...\n    \"type\": \"module\"\n  }\n  ```\n\n  For TypeScript, edit `jest.config.js` as follows:\n\n  ```js\n  module.exports = {\n    // ...\n    extensionsToTreatAsEsm: ['.ts', '.tsx'],\n  }\n  ```\n\n  Run test with `--experimental-vm-modules`:\n\n  ```sh\n  cross-env NODE_OPTIONS=--experimental-vm-modules jest\n\n  # or\n  node --experimental-vm-modules ./node_modules/jest/bin/jest.js\n  ```\n\n### Q: What ECMAScript target is set by `jsc.target`?\n\nA: By default, the version supported by your Node runtime.\n\n| Node version | Default `jsc.target` |\n|--------------|----------------------|\n| 12           | 'es2018'             |\n| 13           | 'es2019'             |\n| 14           | 'es2020'             |\n| 15           | 'es2021'             |\n| 16           | 'es2021'             |\n| 17           | 'es2022'             |\n\nYou can customize this by setting an explicit version in `jest.config.js`:\n\n```js\nmodule.exports = {\n    transform: {\n        \"^.+\\\\.(t|j)sx?$\": [\n            \"@swc/jest\",\n            {\n                jsc: {\n                    target: \"es2021\",\n                },\n            },\n        ],\n    },\n}\n```\n\n## License\n\nMIT\n\n[SWC]: https://swc.rs\n",
    "licenseText": "Copyright (c) 2021 The swc Project Developers\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@swc/jest/-/jest-0.2.24.tgz#35d9377ede049613cd5fdd6c24af2b8dcf622875",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@swc/jest/-/jest-0.2.24.tgz",
    "hash": "35d9377ede049613cd5fdd6c24af2b8dcf622875",
    "integrity": "sha512-fwgxQbM1wXzyKzl1+IW0aGrRvAA8k0Y3NxFhKigbPjOJ4mCKnWEcNX9HQS3gshflcxq8YKhadabGUVfdwjCr6Q==",
    "registry": "npm",
    "packageName": "@swc/jest",
    "cacheIntegrity": "sha512-fwgxQbM1wXzyKzl1+IW0aGrRvAA8k0Y3NxFhKigbPjOJ4mCKnWEcNX9HQS3gshflcxq8YKhadabGUVfdwjCr6Q== sha1-Ndk3ft4ElhPNX91sJK8rjc9iKHU="
  },
  "registry": "npm",
  "hash": "35d9377ede049613cd5fdd6c24af2b8dcf622875"
}