{
  "manifest": {
    "name": "vscode-jsonrpc",
    "description": "A json rpc implementation over streams",
    "version": "8.0.2",
    "author": {
      "name": "Microsoft Corporation"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/Microsoft/vscode-languageserver-node.git",
      "directory": "jsonrpc"
    },
    "bugs": {
      "url": "https://github.com/Microsoft/vscode-languageserver-node/issues"
    },
    "engines": {
      "node": ">=14.0.0"
    },
    "main": "./lib/node/main.js",
    "browser": {
      "./lib/node/main.js": "./lib/browser/main.js"
    },
    "typings": "./lib/common/api.d.ts",
    "devDependencies": {
      "@types/msgpack-lite": "^0.1.7",
      "msgpack-lite": "^0.1.26"
    },
    "scripts": {
      "prepublishOnly": "git clean -xfd . && npm install && npm run clean && npm run compile && npm test",
      "postpublish": "node ../build/npm/post-publish.js",
      "preversion": "npm test",
      "compile": "node ../build/bin/tsc -b ./tsconfig.json",
      "watch": "node ../build/bin/tsc -b ./tsconfig-watch.json -w",
      "clean": "node ../node_modules/rimraf/bin.js lib && node ../node_modules/rimraf/bin.js dist",
      "lint": "node ../node_modules/eslint/bin/eslint.js --ext ts src",
      "test": "npm run test:node && npm run test:browser",
      "test:node": "node ../node_modules/mocha/bin/_mocha",
      "test:browser": "npm run webpack:test:silent && node ../build/bin/runBrowserTests.js  http://127.0.0.1:8080/jsonrpc/src/browser/test/",
      "webpack": "node ../build/bin/webpack  --mode none --config ./webpack.config.js",
      "webpack:test": "node ../build/bin/webpack --mode none --config ./src/browser/test/webpack.config.js",
      "webpack:test:silent": "node ../build/bin/webpack --no-stats --mode none --config ./src/browser/test/webpack.config.js"
    },
    "_registry": "npm",
    "_loc": "/home/agrawe/.cache/yarn/v6/npm-vscode-jsonrpc-8.0.2-f239ed2cd6004021b6550af9fd9d3e47eee3cac9-integrity/node_modules/vscode-jsonrpc/package.json",
    "readmeFilename": "README.md",
    "readme": "# VSCode JSON RPC\n\n[![NPM Version](https://img.shields.io/npm/v/vscode-jsonrpc.svg)](https://npmjs.org/package/vscode-jsonrpc)\n[![NPM Downloads](https://img.shields.io/npm/dm/vscode-jsonrpc.svg)](https://npmjs.org/package/vscode-jsonrpc)\n[![Build Status](https://travis-ci.org/Microsoft/vscode-languageserver-node.svg?branch=master)](https://travis-ci.org/Microsoft/vscode-languageserver-node)\n\nThis npm module implements the base messaging protocol spoken between a VSCode language server and a VSCode language client.\n\nThe npm module can also be used standalone to establish a [JSON-RPC](http://www.jsonrpc.org/) channel between\na client and a server. Below an example how to setup a JSON-RPC connection. First the client side.\n\n```ts\nimport * as cp from 'child_process';\nimport * as rpc from 'vscode-jsonrpc/node';\n\nlet childProcess = cp.spawn(...);\n\n// Use stdin and stdout for communication:\nlet connection = rpc.createMessageConnection(\n\tnew rpc.StreamMessageReader(childProcess.stdout),\n\tnew rpc.StreamMessageWriter(childProcess.stdin));\n\nlet notification = new rpc.NotificationType<string, void>('testNotification');\n\nconnection.listen();\n\nconnection.sendNotification(notification, 'Hello World');\n```\n\nThe server side looks very symmetrical:\n\n```ts\nimport * as rpc from 'vscode-jsonrpc/node';\n\n\nlet connection = rpc.createMessageConnection(\n\tnew rpc.StreamMessageReader(process.stdin),\n\tnew rpc.StreamMessageWriter(process.stdout));\n\nlet notification = new rpc.NotificationType<string, void>('testNotification');\nconnection.onNotification(notification, (param: string) => {\n\tconsole.log(param); // This prints Hello World\n});\n\nconnection.listen();\n```\n\n# History\n\n### 5.0.0\n\n- add progress support\n- move JS target to ES2017\n\n### 4.0.0\n\n- move JS target to ES6.\n\n### 3.0.0:\n\n- converted the NPM module to use TypeScript 2.0.3.\n- added strict null support.\n- support for passing more than one parameter to a request or notification.\n- Breaking changes:\n  - due to the use of TypeScript 2.0.3 and differences in d.ts generation users of the new version need to move to\n    TypeScript 2.0.3 as well.\n\n## License\n[MIT](https://github.com/Microsoft/vscode-languageserver-node/blob/master/License.txt)\n",
    "licenseText": "Copyright (c) Microsoft Corporation\n\nAll rights reserved.\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vscode-jsonrpc/-/vscode-jsonrpc-8.0.2.tgz#f239ed2cd6004021b6550af9fd9d3e47eee3cac9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vscode-jsonrpc/-/vscode-jsonrpc-8.0.2.tgz",
    "hash": "f239ed2cd6004021b6550af9fd9d3e47eee3cac9",
    "integrity": "sha512-RY7HwI/ydoC1Wwg4gJ3y6LpU9FJRZAUnTYMXthqhFXXu77ErDd/xkREpGuk4MyYkk4a+XDWAMqe0S3KkelYQEQ==",
    "registry": "npm",
    "packageName": "vscode-jsonrpc",
    "cacheIntegrity": "sha512-RY7HwI/ydoC1Wwg4gJ3y6LpU9FJRZAUnTYMXthqhFXXu77ErDd/xkREpGuk4MyYkk4a+XDWAMqe0S3KkelYQEQ== sha1-8jntLNYAQCG2VQr5/Z0+R+7jysk="
  },
  "registry": "npm",
  "hash": "f239ed2cd6004021b6550af9fd9d3e47eee3cac9"
}